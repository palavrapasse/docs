openapi: 3.0.3
info:
  title: Specification of the web API that allow users to query and subscribe leaks information
  description: |-
    Monolith web api that serves the frontend.
    
    Some useful links:
    - [Use Cases](https://github.com/palavrapasse/docs/blob/master/core/use-cases.md)
    - [Entities](https://github.com/palavrapasse/docs/blob/master/core/entities.md)
    - [Data Model](https://github.com/palavrapasse/docs/blob/master/core/data-model.md)
  license:
    name: MIT License
    url: https://github.com/palavrapasse/santos/blob/master/LICENSE
  version: 0.0.1
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: leaks
    description: Leaks information query endpoints
  - name: platforms
    description: Leaks platforms information query endpoints
paths:
  /leaks:
    get:
      tags:
        - leaks
      summary: Finds leaks
      operationId: findLeaks
      parameters:
        - name: type
          in: query
          description: Type of information provided in affected
          required: false
          explode: true
          schema:
            type: string
            default: email
            enum:
              - email
              - password
        - name: affected
          in: query
          description: Values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: array
            items: 
              $ref: '#/components/schemas/Email'
        - name: target
          in: query
          description: Specifies the target leaks considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: all
            enum:
              - all
              - newest
              - oldest
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Leak'
  /leaks/subscribe:
    post:
      tags:
        - leaks
      summary: Subscribes to new leaks
      operationId: subscribe
      requestBody:
        description: Subscribe to new leaks
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
        required: true
      responses:
        '204':
          description: successful operation
  /platforms:
    get:
      tags:
        - platforms
      summary: Finds affected platforms
      operationId: findPlatforms
      parameters:
        - name: target
          in: query
          description: Specifies the target affected platforms considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: all
            enum:
              - all
              - newest
              - oldest
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Platform'
components:
  schemas:
    Leak:
      type: object
      properties:
        context: 
          type: string
          example: "Leak context"
        shareDateMSEpoch:
          type: number
    Platform:
      type: string
      example: "Platform1"
    Email:
      type: string
      format: email
      example: "test@mail.com"
    Subscription:
      required:
        - notifyEmail
      type: object
      properties:
        notifyEmail: 
          type: string
        affectedEmails:
          type: array
          items:
            type: string
  requestBodies:
    SubscriptionConfirmation:
      description: Subscription confirmation
      content:
        application/json:
          schema:
            type: string
